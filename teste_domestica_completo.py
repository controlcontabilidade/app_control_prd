#!/usr/bin/env python3
"""
Teste do campo Dom√©stica com login
"""

import requests
import re

def teste_domestica_com_login():
    print("üîê TESTE CAMPO DOM√âSTICA (COM LOGIN)")
    print("=" * 50)
    
    session = requests.Session()
    
    try:
        # 1. Fazer login
        print("üîê Fazendo login...")
        login_data = {
            'username': 'admin',
            'password': 'admin123'
        }
        
        login_response = session.post('http://127.0.0.1:5000/login', data=login_data)
        
        if login_response.status_code == 200:
            print("‚úÖ Login realizado com sucesso")
        else:
            print(f"‚ùå Erro no login: {login_response.status_code}")
            return
            
        # 2. Acessar p√°gina de novo cliente
        print("üîÑ Acessando p√°gina de novo cliente...")
        response = session.get('http://127.0.0.1:5000/client/new')
        
        if response.status_code != 200:
            print(f"‚ùå Erro ao acessar p√°gina: {response.status_code}")
            return
            
        html = response.text
        print(f"‚úÖ P√°gina carregada! Tamanho: {len(html)} caracteres")
        
        # 3. Verificar campo dom√©stica
        print("\nüîç VERIFICANDO CAMPO DOM√âSTICA:")
        
        if 'id="domestica"' in html:
            print("  ‚úÖ Campo domestica encontrado")
            
            # Extrair o elemento completo
            pattern = r'<select[^>]*id="domestica"[^>]*>(.*?)</select>'
            match = re.search(pattern, html, re.DOTALL)
            
            if match:
                select_element = match.group(0)
                print(f"  üìã Elemento: {select_element[:100]}...")
                
                if 'disabled' in select_element:
                    print("  ‚ö†Ô∏è  Campo tem atributo 'disabled'")
                else:
                    print("  ‚úÖ Campo N√ÉO tem atributo 'disabled'")
                    
                if 'value="SIM"' in select_element and 'value="N√ÉO"' in select_element:
                    print("  ‚úÖ Op√ß√µes SIM/N√ÉO encontradas")
                    
        else:
            print("  ‚ùå Campo domestica N√ÉO encontrado")
            
        # 4. Verificar campo CPF/CNPJ
        print("\nüîç VERIFICANDO CAMPO CPF/CNPJ:")
        
        if 'id="cpfCnpj"' in html:
            print("  ‚úÖ Campo cpfCnpj encontrado")
            
            # Extrair o elemento completo
            pattern = r'<input[^>]*id="cpfCnpj"[^>]*>'
            match = re.search(pattern, html)
            
            if match:
                input_element = match.group(0)
                print(f"  üìã Elemento: {input_element}")
                
                if 'oninput="formatarCpfCnpjInline(this)"' in input_element:
                    print("  ‚úÖ Event handler oninput encontrado")
                else:
                    print("  ‚ùå Event handler oninput N√ÉO encontrado")
                    
        else:
            print("  ‚ùå Campo cpfCnpj N√ÉO encontrado")
            
        # 5. Verificar fun√ß√£o inline
        print("\nüîç VERIFICANDO FUN√á√ÉO INLINE:")
        
        if 'function formatarCpfCnpjInline(' in html:
            print("  ‚úÖ Fun√ß√£o formatarCpfCnpjInline encontrada")
            
            if 'domesticaSelect.disabled = false' in html:
                print("  ‚úÖ C√≥digo para habilitar Dom√©stica encontrado")
            else:
                print("  ‚ùå C√≥digo para habilitar Dom√©stica N√ÉO encontrado")
                
            if 'configurarCampoDomesticaInicial' in html:
                print("  ‚úÖ Fun√ß√£o de inicializa√ß√£o encontrada")
            else:
                print("  ‚ùå Fun√ß√£o de inicializa√ß√£o N√ÉO encontrada")
                
        else:
            print("  ‚ùå Fun√ß√£o formatarCpfCnpjInline N√ÉO encontrada")
            
        print("\nüéØ RESULTADO:")
        print("Se todos os itens foram encontrados, a implementa√ß√£o est√° correta!")
        print("Teste manual: acesse http://127.0.0.1:5000/client/new no navegador")
        print("Digite um CPF e verifique se o campo Dom√©stica √© habilitado")
            
    except Exception as e:
        print(f"‚ùå Erro: {e}")

if __name__ == "__main__":
    teste_domestica_com_login()
