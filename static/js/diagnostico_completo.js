// Script para detectar erros JavaScript no template

console.log('üîç DIAGN√ìSTICO DETALHADO DO BOT√ÉO ADICIONAR S√ìCIO');
console.log('========================================');

// 1. Verificar se a fun√ß√£o existe
try {
    if (typeof adicionarSocio === 'function') {
        console.log('‚úÖ Fun√ß√£o adicionarSocio definida');
        console.log('   C√≥digo da fun√ß√£o:', adicionarSocio.toString().substring(0, 100) + '...');
    } else {
        console.error('‚ùå Fun√ß√£o adicionarSocio N√ÉO definida');
        console.log('   Tipo encontrado:', typeof adicionarSocio);
    }
} catch (e) {
    console.error('‚ùå Erro ao verificar fun√ß√£o adicionarSocio:', e);
}

// 2. Verificar container
try {
    const container = document.getElementById('sociosContainer');
    if (container) {
        console.log('‚úÖ Container sociosContainer encontrado');
        console.log('   Classes:', container.className);
        console.log('   Filhos:', container.children.length);
    } else {
        console.error('‚ùå Container sociosContainer N√ÉO encontrado');
    }
} catch (e) {
    console.error('‚ùå Erro ao verificar container:', e);
}

// 3. Verificar bot√£o
try {
    const botao = document.querySelector('button[onclick="adicionarSocio()"]');
    if (botao) {
        console.log('‚úÖ Bot√£o encontrado');
        console.log('   Texto:', botao.textContent.trim());
        console.log('   Classes:', botao.className);
        console.log('   onclick:', botao.onclick);
        console.log('   getAttribute onclick:', botao.getAttribute('onclick'));
    } else {
        console.error('‚ùå Bot√£o N√ÉO encontrado');
        
        // Procurar bot√µes similares
        const botoesComTexto = document.querySelectorAll('button');
        console.log('üîç Outros bot√µes encontrados:');
        botoesComTexto.forEach((btn, i) => {
            if (btn.textContent.includes('Adicionar') || btn.textContent.includes('S√≥cio')) {
                console.log(`   ${i}: "${btn.textContent.trim()}" - onclick: ${btn.getAttribute('onclick')}`);
            }
        });
    }
} catch (e) {
    console.error('‚ùå Erro ao verificar bot√£o:', e);
}

// 4. Verificar vari√°vel numeroSocios
try {
    console.log('üìä Vari√°vel numeroSocios:', typeof numeroSocios !== 'undefined' ? numeroSocios : 'N√ÉO DEFINIDA');
} catch (e) {
    console.error('‚ùå Erro ao verificar numeroSocios:', e);
}

// 5. Verificar erros JavaScript na p√°gina
window.addEventListener('error', function(e) {
    console.error('üö® ERRO JAVASCRIPT DETECTADO:', e.error);
    console.error('   Arquivo:', e.filename);
    console.error('   Linha:', e.lineno);
    console.error('   Mensagem:', e.message);
});

// 6. Teste direto da fun√ß√£o
console.log('üß™ TESTE DIRETO DA FUN√á√ÉO:');
try {
    if (typeof adicionarSocio === 'function') {
        console.log('   Executando adicionarSocio()...');
        const resultado = adicionarSocio();
        console.log('   Resultado:', resultado);
    } else {
        console.log('   Fun√ß√£o n√£o dispon√≠vel para teste');
    }
} catch (e) {
    console.error('   ‚ùå ERRO ao executar fun√ß√£o:', e);
    console.error('   Stack:', e.stack);
}

console.log('========================================');
console.log('üîö Diagn√≥stico conclu√≠do.');
