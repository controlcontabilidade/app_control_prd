// Teste do bot√£o Adicionar Contato
// Execute no console do navegador: testBotaoContato()

function testBotaoContato() {
    console.log('üß™ === TESTE DO BOT√ÉO ADICIONAR CONTATO ===');
    
    // 1. Verificar se a fun√ß√£o existe
    if (typeof adicionarContato !== 'function') {
        console.error('‚ùå ERRO: Fun√ß√£o adicionarContato n√£o est√° definida!');
        return false;
    }
    console.log('‚úÖ Fun√ß√£o adicionarContato encontrada');
    
    // 2. Verificar se o container existe
    const container = document.getElementById('contatosContainer');
    if (!container) {
        console.error('‚ùå ERRO: Container contatosContainer n√£o encontrado!');
        return false;
    }
    console.log('‚úÖ Container contatosContainer encontrado');
    
    // 3. Verificar se o bot√£o existe
    const botao = document.querySelector('button[onclick="adicionarContato()"]');
    if (!botao) {
        console.error('‚ùå ERRO: Bot√£o "Adicionar Contato" n√£o encontrado!');
        return false;
    }
    console.log('‚úÖ Bot√£o "Adicionar Contato" encontrado');
    
    // 4. Verificar contatos existentes
    console.log('üîç Contatos atualmente vis√≠veis:');
    for (let i = 1; i <= 10; i++) {
        const contato = document.getElementById(`contato_${i}`);
        if (contato) {
            const visivel = contato.style.display !== 'none';
            console.log(`   contato_${i}: ${visivel ? 'VIS√çVEL' : 'OCULTO'}`);
        }
    }
    
    // 5. Testar a fun√ß√£o manualmente
    console.log('üß™ Executando adicionarContato()...');
    try {
        const resultado = adicionarContato();
        console.log('‚úÖ Fun√ß√£o executada com sucesso. Resultado:', resultado);
        
        // Verificar novamente os contatos ap√≥s execu√ß√£o
        setTimeout(() => {
            console.log('üîç Contatos ap√≥s execu√ß√£o da fun√ß√£o:');
            for (let i = 1; i <= 10; i++) {
                const contato = document.getElementById(`contato_${i}`);
                if (contato) {
                    const visivel = contato.style.display !== 'none';
                    console.log(`   contato_${i}: ${visivel ? 'VIS√çVEL' : 'OCULTO'}`);
                }
            }
        }, 500);
        
    } catch (error) {
        console.error('‚ùå ERRO ao executar adicionarContato():', error);
        return false;
    }
    
    return true;
}

// Auto-executar quando o script for carregado
if (document.readyState === 'complete' || document.readyState === 'interactive') {
    setTimeout(() => {
        console.log('üîß Script de teste de contatos carregado. Execute testBotaoContato() no console.');
    }, 1000);
} else {
    document.addEventListener('DOMContentLoaded', () => {
        setTimeout(() => {
            console.log('üîß Script de teste de contatos carregado. Execute testBotaoContato() no console.');
        }, 1000);
    });
}
