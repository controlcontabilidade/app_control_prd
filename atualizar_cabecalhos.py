#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Script para atualizar os cabe√ßalhos da planilha com os novos campos de senha
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

def main():
    """Atualiza cabe√ßalhos da planilha"""
    print("üîÑ Atualizando cabe√ßalhos da planilha...")
    
    try:
        # Obter ID da planilha das configura√ß√µes do app
        try:
            # Importar configura√ß√µes do app
            import app
            spreadsheet_id = app.GOOGLE_SHEETS_ID
        except:
            # Fallback: usar vari√°vel de ambiente
            spreadsheet_id = os.environ.get('GOOGLE_SHEETS_ID')
            
        if not spreadsheet_id:
            print("‚ùå GOOGLE_SHEETS_ID n√£o definido. Verificando storage_service do app...")
            # Tentar obter do storage_service inicializado
            try:
                import app
                if hasattr(app, 'storage_service') and app.storage_service:
                    spreadsheet_id = app.storage_service.spreadsheet_id
                    print(f"‚úÖ Obtido do storage_service: {spreadsheet_id[:20]}...")
            except:
                pass
                
        if not spreadsheet_id:
            print("‚ùå N√£o foi poss√≠vel obter o GOOGLE_SHEETS_ID")
            return
            
        print(f"üìä Usando planilha: {spreadsheet_id[:20]}...")
        
        from services.google_sheets_service_account import GoogleSheetsServiceAccountService
        service = GoogleSheetsServiceAccountService(spreadsheet_id)
        
        # For√ßar atualiza√ß√£o dos cabe√ßalhos
        result = service.ensure_correct_headers()
        
        # Obter os cabe√ßalhos atuais
        headers = service.get_headers()
        
        if isinstance(result, bool) and result:
            print(f"‚úÖ Cabe√ßalhos j√° estavam corretos! Total: {len(headers)} colunas")
        else:
            print(f"‚úÖ Cabe√ßalhos atualizados! Total: {len(headers)} colunas")
        
        # Verificar campos de senha
        password_fields = [
            'CNPJ ACESSO SIMPLES NACIONAL',
            'CPF DO REPRESENTANTE LEGAL', 
            'C√ìDIGO ACESSO SN',
            'SENHA ISS',
            'SENHA SEFIN',
            'SENHA SEUMA',
            'LOGIN ANVISA EMPRESA',
            'SENHA ANVISA EMPRESA',
            'LOGIN ANVISA GESTOR',
            'SENHA ANVISA GESTOR',
            'SENHA FAP/INSS'
        ]
        
        print("\nüîç Verifica√ß√£o de campos de senha:")
        for field in password_fields:
            if field in headers:
                pos = headers.index(field) + 1  # +1 porque planilha come√ßa em 1
                print(f"‚úÖ {field}: posi√ß√£o {pos}")
            else:
                print(f"‚ùå {field}: N√ÉO ENCONTRADO")
        
    except Exception as e:
        print(f"‚ùå Erro: {e}")
        import traceback
        traceback.print_exc()

if __name__ == '__main__':
    main()
