#!/usr/bin/env python3
"""
Teste espec√≠fico para verificar o campo Dom√©stica
"""

import requests
import time

def teste_campo_domestica():
    print("üè† TESTE DO CAMPO DOM√âSTICA")
    print("=" * 50)
    
    try:
        # Fazer requisi√ß√£o para a p√°gina
        url = 'http://127.0.0.1:5000/client/new'
        print(f"üîÑ Acessando: {url}")
        
        response = requests.get(url, timeout=10)
        if response.status_code == 200:
            html = response.text
            print(f"‚úÖ P√°gina carregada! Status: {response.status_code}")
            
            # Verificar campo dom√©stica
            print("\nüîç VERIFICANDO CAMPO DOM√âSTICA:")
            
            if 'id="domestica"' in html:
                print("  ‚úÖ Campo domestica encontrado")
                
                # Verificar se est√° disabled por padr√£o
                if 'id="domestica" name="domestica" disabled' in html:
                    print("  ‚ö†Ô∏è  Campo est√° DISABLED por padr√£o no HTML")
                elif 'disabled' in html.split('id="domestica"')[1].split('>')[0]:
                    print("  ‚ö†Ô∏è  Campo tem atributo disabled")
                else:
                    print("  ‚úÖ Campo N√ÉO est√° disabled no HTML")
                    
                # Verificar op√ß√µes
                if 'value="SIM"' in html and 'value="N√ÉO"' in html:
                    print("  ‚úÖ Op√ß√µes SIM/N√ÉO encontradas")
                else:
                    print("  ‚ùå Op√ß√µes SIM/N√ÉO n√£o encontradas")
                    
            else:
                print("  ‚ùå Campo domestica N√ÉO encontrado")
                
            # Verificar fun√ß√£o inline
            print("\nüîç VERIFICANDO FUN√á√ÉO INLINE:")
            
            if 'formatarCpfCnpjInline' in html:
                print("  ‚úÖ Fun√ß√£o formatarCpfCnpjInline encontrada")
                
                if 'domesticaSelect.disabled = false' in html:
                    print("  ‚úÖ C√≥digo para habilitar Dom√©stica encontrado")
                else:
                    print("  ‚ùå C√≥digo para habilitar Dom√©stica N√ÉO encontrado")
                    
                if 'domesticaSelect.disabled = true' in html:
                    print("  ‚úÖ C√≥digo para desabilitar Dom√©stica encontrado")
                else:
                    print("  ‚ùå C√≥digo para desabilitar Dom√©stica N√ÉO encontrado")
                    
            else:
                print("  ‚ùå Fun√ß√£o formatarCpfCnpjInline N√ÉO encontrada")
                
            # Verificar event handlers
            print("\nüîç VERIFICANDO EVENT HANDLERS:")
            
            cpf_section = ""
            if 'id="cpfCnpj"' in html:
                # Extrair a se√ß√£o do input CPF/CNPJ
                start = html.find('id="cpfCnpj"')
                end = html.find('>', start)
                cpf_section = html[start-100:end+1]  # Pegar contexto
                
                print("  ‚úÖ Campo cpfCnpj encontrado")
                
                if 'oninput="formatarCpfCnpjInline(this)"' in cpf_section:
                    print("  ‚úÖ Event handler oninput encontrado")
                else:
                    print("  ‚ùå Event handler oninput N√ÉO encontrado")
                    
                if 'onblur="formatarCpfCnpjInline(this)"' in cpf_section:
                    print("  ‚úÖ Event handler onblur encontrado")
                else:
                    print("  ‚ùå Event handler onblur N√ÉO encontrado")
                    
            else:
                print("  ‚ùå Campo cpfCnpj N√ÉO encontrado")
                
            print("\nüìã INSTRU√á√ïES PARA TESTE MANUAL:")
            print("1. Abra o navegador: http://127.0.0.1:5000/client/new")
            print("2. Abra o Console (F12)")
            print("3. Digite: document.getElementById('domestica').disabled")
            print("   - Se retornar true, est√° bloqueado")
            print("   - Se retornar false, est√° liberado")
            print("4. Digite um CPF: 02051962332")
            print("5. Digite novamente: document.getElementById('domestica').disabled")
            print("6. O resultado deve ser false (liberado)")
            
        else:
            print(f"‚ùå Erro ao carregar p√°gina. Status: {response.status_code}")
            
    except requests.exceptions.ConnectionError:
        print("‚ùå ERRO: Servidor n√£o est√° rodando")
        print("üí° Execute: python app.py")
    except Exception as e:
        print(f"‚ùå Erro: {e}")

if __name__ == "__main__":
    teste_campo_domestica()
