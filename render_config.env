# Configurações específicas para deploy no Render (512MB)
# Copie essas variáveis para o painel do Render

# === CONFIGURAÇÕES DE MEMÓRIA CRÍTICAS ===
FLASK_ENV=production
PYTHONOPTIMIZE=2
PYTHONDONTWRITEBYTECODE=1
PYTHONUNBUFFERED=1
WEB_CONCURRENCY=1
WORKER_CONNECTIONS=25
MAX_REQUESTS=50

# === CONFIGURAÇÕES DA APLICAÇÃO ===
SECRET_KEY=your-super-secret-key-change-this-in-production
GOOGLE_SHEETS_ID=1jEmEPlxhGsrB_VhP3Pa-69xGRXRSwSAKd1Ypx241M4s
GOOGLE_SHEETS_API_KEY=your-api-key-here

# === GOOGLE SERVICE ACCOUNT (JSON) ===
# Cole aqui o conteúdo completo do seu service-account-key.json em uma linha
# Exemplo: GOOGLE_SERVICE_ACCOUNT_JSON={"type":"service_account","project_id":"..."}
GOOGLE_SERVICE_ACCOUNT_JSON={"type":"service_account","project_id":"your-project","private_key_id":"...","private_key":"-----BEGIN PRIVATE KEY-----\n...\n-----END PRIVATE KEY-----\n","client_email":"...","client_id":"...","auth_uri":"https://accounts.google.com/o/oauth2/auth","token_uri":"https://oauth2.googleapis.com/token","auth_provider_x509_cert_url":"https://www.googleapis.com/oauth2/v1/certs","client_x509_cert_url":"..."}

# === CONFIGURAÇÕES DE OTIMIZAÇÃO ===
# Essas são aplicadas automaticamente pelo código quando FLASK_ENV=production
# MAX_CONTENT_LENGTH=4MB (reduzido de 8MB)
# JSON_SORT_KEYS=False
# JSONIFY_PRETTYPRINT_REGULAR=False
# SEND_FILE_MAX_AGE_DEFAULT=300 (5 minutos)

# === COMANDOS DE BUILD NO RENDER ===
# Build Command: chmod +x deploy_render.sh && ./deploy_render.sh
# Start Command: gunicorn --config gunicorn.conf.py wsgi:application

# === MONITORAMENTO ===
# Para verificar uso de memória em produção, adicione esta rota:
# GET /api/memory-status (implementada no app.py)

# === TROUBLESHOOTING ===
# Se a aplicação for terminada por OOM (Out of Memory):
# 1. Reduza MAX_ROWS_PER_REQUEST para 25
# 2. Considere implementar paginação real
# 3. Use cache Redis externo para dados grandes
# 4. Verifique logs com: heroku logs --tail (ou equivalente do Render)

# === LIMITES DO RENDER (Plano 512MB) ===
# RAM: 512MB total
# CPU: Compartilhado
# Timeout: 60s por request
# Workers: Recomendado 1 apenas
# Storage: Efêmero (arquivos são perdidos no restart)
